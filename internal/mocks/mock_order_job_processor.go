// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/services (interfaces: OrderJobProcessor)
//
// Generated by this command:
//
//	mockgen -destination=internal/mocks/mock_order_job_processor.go -package=mocks ./internal/services OrderJobProcessor
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	models "github.com/aleksandrpnshkn/gophermart/internal/models"
	gomock "go.uber.org/mock/gomock"
)

// MockOrderJobProcessor is a mock of OrderJobProcessor interface.
type MockOrderJobProcessor struct {
	ctrl     *gomock.Controller
	recorder *MockOrderJobProcessorMockRecorder
	isgomock struct{}
}

// MockOrderJobProcessorMockRecorder is the mock recorder for MockOrderJobProcessor.
type MockOrderJobProcessorMockRecorder struct {
	mock *MockOrderJobProcessor
}

// NewMockOrderJobProcessor creates a new mock instance.
func NewMockOrderJobProcessor(ctrl *gomock.Controller) *MockOrderJobProcessor {
	mock := &MockOrderJobProcessor{ctrl: ctrl}
	mock.recorder = &MockOrderJobProcessorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOrderJobProcessor) EXPECT() *MockOrderJobProcessorMockRecorder {
	return m.recorder
}

// GetName mocks base method.
func (m *MockOrderJobProcessor) GetName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetName indicates an expected call of GetName.
func (mr *MockOrderJobProcessorMockRecorder) GetName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetName", reflect.TypeOf((*MockOrderJobProcessor)(nil).GetName))
}

// Process mocks base method.
func (m *MockOrderJobProcessor) Process(ctx context.Context, order models.Order) (models.Order, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Process", ctx, order)
	ret0, _ := ret[0].(models.Order)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Process indicates an expected call of Process.
func (mr *MockOrderJobProcessorMockRecorder) Process(ctx, order any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Process", reflect.TypeOf((*MockOrderJobProcessor)(nil).Process), ctx, order)
}
