// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/services (interfaces: Accrualer)
//
// Generated by this command:
//
//	mockgen -destination=internal/mocks/mock_accrualer.go -package=mocks ./internal/services Accrualer
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	decimal "github.com/shopspring/decimal"
	gomock "go.uber.org/mock/gomock"
)

// MockAccrualer is a mock of Accrualer interface.
type MockAccrualer struct {
	ctrl     *gomock.Controller
	recorder *MockAccrualerMockRecorder
	isgomock struct{}
}

// MockAccrualerMockRecorder is the mock recorder for MockAccrualer.
type MockAccrualerMockRecorder struct {
	mock *MockAccrualer
}

// NewMockAccrualer creates a new mock instance.
func NewMockAccrualer(ctrl *gomock.Controller) *MockAccrualer {
	mock := &MockAccrualer{ctrl: ctrl}
	mock.recorder = &MockAccrualerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccrualer) EXPECT() *MockAccrualerMockRecorder {
	return m.recorder
}

// GetAccrual mocks base method.
func (m *MockAccrualer) GetAccrual(ctx context.Context, orderNumber string) (decimal.Decimal, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAccrual", ctx, orderNumber)
	ret0, _ := ret[0].(decimal.Decimal)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAccrual indicates an expected call of GetAccrual.
func (mr *MockAccrualerMockRecorder) GetAccrual(ctx, orderNumber any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAccrual", reflect.TypeOf((*MockAccrualer)(nil).GetAccrual), ctx, orderNumber)
}
